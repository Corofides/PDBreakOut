---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jameslendrem.
--- DateTime: 18/01/2024 21:21
---

local pd <const> = playdate
local gfx <const> = pd.graphics

class("Brick").extends(gfx.sprite)

function Brick:init(x, y, hits)

    local brickWidth = 40
    local brickHeight = 20

    local brickImage = gfx.image.new(brickWidth, brickHeight)

    gfx.pushContext(brickImage)
        gfx.drawRect(0, 0, brickWidth, brickHeight)
    gfx.popContext()

    self:setImage(brickImage)

    self.remainingHits = hits;
    self.currentCollided = {}

    self:setCollideRect(0, 0, brickWidth, brickHeight)
    self:moveTo(x, y)
    self:add()

end

function Brick:checkForBallCollision()

    local actualX, actualY, collisions, total = self:checkCollisions(self.x, self.y)

    if (total == 0) then
        return false
    end

    local hasCollided = false

    if (total > 0) then
        for i, collision in pairs(collisions) do
            local collideObject = collision["other"]
            if (collideObject:isa(Ball)) then
                --- self.currentCollided:push(collideObject)
                hasCollided = true
            end
        end
    end

    return hasCollided

end

function Brick:onBallCollision()

    self.remainingHits = self.remainingHits - 1;

    if (self.remainingHits == 0) then
        self:remove();
    end

end


function Brick:update()

    if (self:checkForBallCollision()) then
        self:onBallCollision()
        print(self.remainingHits)
    end

end